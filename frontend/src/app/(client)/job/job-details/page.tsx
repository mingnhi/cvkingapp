"use client";
import React, { useState } from "react";
import { ArrowLeft } from "lucide-react";
import BreadcrumbTabActive from "@/components/ui/common/breadcrumb/BreadcrumbTabActive";
import JobHeader from "@/components/ui/client/job/job-details/JobHeader";
import JobContent from "@/components/ui/client/job/job-details/JobContent";
import CompanySidebar from "@/components/ui/client/job/job-details/CompanySidebar";
import RelatedJobsSidebar from "@/components/ui/client/job/job-details/RelatedJobsSidebar";
import ApplyModal from "@/components/ui/client/job/job-details/ApplyModal";

interface JobDetailPageProps {
  jobId: string | null;
  navigate?: (page: string, id?: string) => void;
}

export default function JobDetailPage({ jobId, navigate }: JobDetailPageProps) {
  const [showApplyModal, setShowApplyModal] = useState(false);

  // Mock job data
  const job = {
    id: jobId || "1",
    title: "L·∫≠p Tr√¨nh Vi√™n Frontend Senior",
    company: "TechCorp Vietnam",
    logo: "https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=96&h=96&fit=crop&crop=face",
    location: "TP. H·ªì Ch√≠ Minh",
    salary: "25 - 35 tri·ªáu",
    type: "To√†n th·ªùi gian",
    experience: "3-5 nƒÉm",
    posted: "2 ng√†y tr∆∞·ªõc",
    deadline: "30/12/2024",
    featured: true,
    urgent: false,
    views: 234,
    applicants: 45,
    tags: ["React", "TypeScript", "Node.js", "Remote", "Senior Level"],
    description: `
Ch√∫ng t√¥i ƒëang t√¨m ki·∫øm m·ªôt Senior Frontend Developer c√≥ kinh nghi·ªám ƒë·ªÉ gia nh·∫≠p ƒë·ªôi ng≈© ph√°t tri·ªÉn s·∫£n ph·∫©m c·ªßa ch√∫ng t√¥i. 
B·∫°n s·∫Ω ch·ªãu tr√°ch nhi·ªám x√¢y d·ª±ng v√† duy tr√¨ c√°c ·ª©ng d·ª•ng web hi·ªán ƒë·∫°i, l√†m vi·ªác ch·∫∑t ch·∫Ω v·ªõi ƒë·ªôi thi·∫øt k·∫ø UX/UI v√† backend.

üîπ Tr√°ch nhi·ªám ch√≠nh:
‚Ä¢ Ph√°t tri·ªÉn v√† duy tr√¨ ·ª©ng d·ª•ng web v·ªõi React, TypeScript  
‚Ä¢ H·ª£p t√°c v·ªõi ƒë·ªôi thi·∫øt k·∫ø ƒë·ªÉ hi·ªán th·ª±c h√≥a UI/UX  
‚Ä¢ T·ªëi ∆∞u hi·ªáu su·∫•t v√† tr·∫£i nghi·ªám ng∆∞·ªùi d√πng  
‚Ä¢ Code review & mentoring junior developer  
‚Ä¢ Tham gia v√†o quy tr√¨nh ph√°t tri·ªÉn s·∫£n ph·∫©m

üîπ M√¥i tr∆∞·ªùng l√†m vi·ªác:
‚Ä¢ VƒÉn ph√≤ng hi·ªán ƒë·∫°i t·∫°i trung t√¢m TP.HCM  
‚Ä¢ Flexible working time  
‚Ä¢ Remote 2-3 ng√†y/tu·∫ßn  
‚Ä¢ Team building & ho·∫°t ƒë·ªông n·ªôi b·ªô th∆∞·ªùng xuy√™n
    `,
    requirements: [
      "3+ nƒÉm kinh nghi·ªám v·ªõi React v√† TypeScript",
      "Hi·ªÉu bi·∫øt s√¢u v·ªÅ HTML, CSS, JavaScript ES6+",
      "Kinh nghi·ªám v·ªõi state management (Redux, Zustand)",
      "C√≥ kinh nghi·ªám l√†m vi·ªác v·ªõi API RESTful v√† GraphQL",
      "Ki·∫øn th·ª©c v·ªÅ testing (Jest, React Testing Library)",
      "Kinh nghi·ªám v·ªõi Git v√† CI/CD",
      "Kh·∫£ nƒÉng giao ti·∫øp t·ªët v√† l√†m vi·ªác nh√≥m",
    ],
    benefits: [
      "L∆∞∆°ng t·ª´ 25-35 tri·ªáu VND (c√≥ th·ªÉ th∆∞∆°ng l∆∞·ª£ng theo nƒÉng l·ª±c)",
      "Th∆∞·ªüng d·ª± √°n v√† KPI h·∫•p d·∫´n",
      "B·∫£o hi·ªÉm x√£ h·ªôi, y t·∫ø ƒë·∫ßy ƒë·ªß theo quy ƒë·ªãnh",
      "B·∫£o hi·ªÉm s·ª©c kh·ªèe cao c·∫•p cho c√° nh√¢n v√† gia ƒë√¨nh",
      "L√†m vi·ªác t·ª´ xa 2-3 ng√†y/tu·∫ßn",
      "13th month salary + performance bonus",
      "C∆° h·ªôi h·ªçc t·∫≠p v√† ph√°t tri·ªÉn v·ªõi budget training",
      "M√¥i tr∆∞·ªùng l√†m vi·ªác tr·∫ª, nƒÉng ƒë·ªông v√† s√°ng t·∫°o",
      "C√°c ho·∫°t ƒë·ªông team building, du l·ªãch c√¥ng ty",
    ],
    companyInfo: {
      name: "TechCorp Vietnam",
      size: "100-500 nh√¢n vi√™n",
      industry: "C√¥ng ngh·ªá th√¥ng tin",
      website: "https://techcorp.vn",
      email: "hr@techcorp.vn",
      phone: "+84 28 1234 5678",
      address: "T·∫ßng 15, T√≤a nh√† ABC, 123 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM",
      established: "2016",
      specialties: [
        "Web Development",
        "Mobile Apps",
        "Cloud Solutions",
        "AI/ML",
      ],
    },
  };

  const relatedJobs = [
    {
      id: "2",
      title: "Frontend Developer",
      company: "StartupVN",
      salary: "18 - 25 tri·ªáu",
      location: "H√† N·ªôi",
      posted: "1 ng√†y tr∆∞·ªõc",
      urgent: false,
    },
    {
      id: "3",
      title: "React Developer",
      company: "Digital Agency",
      salary: "20 - 28 tri·ªáu",
      location: "ƒê√† N·∫µng",
      posted: "3 ng√†y tr∆∞·ªõc",
      urgent: true,
    },
    {
      id: "4",
      title: "Full Stack Developer",
      company: "Tech Solutions",
      salary: "22 - 32 tri·ªáu",
      location: "TP. H·ªì Ch√≠ Minh",
      posted: "2 ng√†y tr∆∞·ªõc",
      urgent: false,
    },
  ];

  const handleApply = () => {
    setShowApplyModal(false);
    if (navigate) {
      navigate("cv-builder");
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Breadcrumb */}
        <div className="mb-8">
          <BreadcrumbTabActive
            items={[
              { name: "Trang ch·ªß" },
              { name: "Vi·ªác l√†m" },
              { name: job.title },
            ]}
          />
        </div>

        {/* Back button */}
        <div className="flex items-center mb-6">
          <button
            onClick={() => navigate?.("jobs")}
            className="flex items-center text-gray-600 hover:text-[#f26b38] transition-colors"
          >
            <ArrowLeft className="h-4 w-4 mr-2" />
            Quay l·∫°i danh s√°ch vi·ªác l√†m
          </button>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Left: Job info */}
          <div className="lg:col-span-2 space-y-6">
            <JobHeader
              job={job}
              onApply={() => setShowApplyModal(true)}
              onViewCompany={() => navigate?.("company-detail", "1")}
            />
            <JobContent job={job} />
          </div>

          {/* Right: Sidebar */}
          <div className="lg:sticky lg:top-24 lg:h-[calc(100vh-6rem)] lg:overflow-y-auto space-y-6">
            <CompanySidebar
              companyInfo={job.companyInfo}
              onViewCompanyDetail={() => navigate?.("company-detail", "1")}
            />
            <RelatedJobsSidebar
              relatedJobs={relatedJobs}
              onJobClick={(id) => navigate?.("job-detail", id)}
              onViewMore={() => navigate?.("jobs")}
            />
          </div>
        </div>
      </div>

      {/* Apply Modal */}
      {showApplyModal && (
        <ApplyModal
          jobTitle={job.title}
          onClose={() => setShowApplyModal(false)}
          onConfirm={handleApply}
        />
      )}
    </div>
  );
}
